{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web development\\\\Projects\\\\bolly_hangman\\\\src\\\\ContextProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { myContext } from './Context';\nimport Movie from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContextProvider(props) {\n  _s();\n  // STATE 1 to render play button\n  const [isButton, setIsButton] = useState(false);\n  //  STATE 2 to render game popup\n  const [gamePopup, setGamePopup] = useState(false);\n  // STATE 3 to render hint popup\n  const [hintPopup, setHintPopup] = useState(false);\n\n  // STATES for movie data\n  const [movieTitle, setMovietitle] = useState([]);\n  const [movieUnmasked, setMovieUnmasked] = useState([]);\n  const [movieDesc, setMoviedesc] = useState('');\n  let array;\n\n  // STATES for corrects and fails\n  const [corrects, setCorrects] = useState([]);\n  const [fails, setFails] = useState([]);\n  const [status, setStatus] = useState('');\n\n  // FUNCTION 1 for rendering popup and getting a random movie\n  const playGame = () => {\n    setGamePopup(true);\n    setIsButton(false);\n    getRandom();\n  };\n\n  //  FUNCTION 2 for getting data of a random movie \n  const getRandom = () => {\n    let randomMoviedata = Movie[Math.floor(Math.random() * Movie.length)];\n\n    // console.log(randomMoviedata)\n    let moviename = randomMoviedata.title;\n    let movie = Array.from(moviename.toUpperCase());\n    setMovieUnmasked(movie);\n    let vowels = ['A', 'E', 'I', 'O', 'U'];\n    // console.log(movie)\n\n    array = [];\n    movie.map((v, i) => {\n      // console.log(v)\n\n      if (vowels.includes(v)) {\n        console.log(v, 'vowels');\n        array[i] = v;\n      } else if (v === ' ') {\n        array[i] = ' ';\n      } else {\n        array[i] = '__';\n      }\n    });\n    setMovietitle(array);\n    setMoviedesc(randomMoviedata.description);\n  };\n\n  // FUNCTION 2 that runs on guess on click from keyboard\n  const onGuess = e => {\n    let letter = e.target.value;\n    // console.log(letter)\n    if (movieUnmasked.includes(letter)) {\n      setCorrects([...corrects, letter]);\n      // console.log('word exists')\n      movieUnmasked.map((v, i) => {\n        if (v === letter) {\n          movieTitle[i] = v;\n        }\n      });\n    } else {\n      setFails([...fails, letter]);\n    }\n  };\n  useEffect(() => {}, [corrects]);\n  return /*#__PURE__*/_jsxDEV(myContext.Provider, {\n    value: {\n      playGame,\n      isButton,\n      setIsButton,\n      gamePopup,\n      hintPopup,\n      setHintPopup,\n      movieTitle,\n      movieDesc,\n      onGuess,\n      corrects,\n      fails\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(ContextProvider, \"IEJ1wsOIeqnoZ8v04Ws7oKbVt8Y=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","myContext","Movie","jsxDEV","_jsxDEV","ContextProvider","props","_s","isButton","setIsButton","gamePopup","setGamePopup","hintPopup","setHintPopup","movieTitle","setMovietitle","movieUnmasked","setMovieUnmasked","movieDesc","setMoviedesc","array","corrects","setCorrects","fails","setFails","status","setStatus","playGame","getRandom","randomMoviedata","Math","floor","random","length","moviename","title","movie","Array","from","toUpperCase","vowels","map","v","i","includes","console","log","description","onGuess","e","letter","target","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Web development/Projects/bolly_hangman/src/ContextProvider.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { myContext } from './Context'\r\nimport Movie from './data'\r\n\r\nfunction ContextProvider(props) {\r\n  // STATE 1 to render play button\r\n  const [isButton, setIsButton] = useState(false)\r\n  //  STATE 2 to render game popup\r\n  const [gamePopup, setGamePopup] = useState(false)\r\n  // STATE 3 to render hint popup\r\n  const [hintPopup, setHintPopup] = useState(false)\r\n\r\n  // STATES for movie data\r\n  const [movieTitle, setMovietitle] = useState([])\r\n  const [movieUnmasked, setMovieUnmasked] = useState([])\r\n  const [movieDesc, setMoviedesc] = useState('')\r\n  let array\r\n\r\n  // STATES for corrects and fails\r\n  const [corrects, setCorrects] = useState([])\r\n  const [fails, setFails] = useState([])\r\n\r\n  const [status, setStatus] = useState('')\r\n\r\n\r\n  // FUNCTION 1 for rendering popup and getting a random movie\r\n  const playGame = () => {\r\n    setGamePopup(true)\r\n    setIsButton(false)\r\n    getRandom();\r\n\r\n  }\r\n\r\n  //  FUNCTION 2 for getting data of a random movie \r\n  const getRandom = () => {\r\n\r\n    let randomMoviedata = Movie[Math.floor(Math.random() * Movie.length)]\r\n\r\n    // console.log(randomMoviedata)\r\n    let moviename = randomMoviedata.title\r\n    let movie = Array.from(moviename.toUpperCase())\r\n    setMovieUnmasked(movie)\r\n    let vowels = ['A', 'E', 'I', 'O', 'U']\r\n    // console.log(movie)\r\n\r\n    array = []\r\n    movie.map((v, i) => {\r\n      // console.log(v)\r\n\r\n      if (vowels.includes(v)) {\r\n        console.log(v, 'vowels')\r\n        array[i] = v\r\n      }\r\n      else if (v === ' ') {\r\n        array[i] = ' '\r\n\r\n      }\r\n      else {\r\n        array[i] = '__'\r\n      }\r\n\r\n\r\n\r\n    })\r\n    setMovietitle(array)\r\n    setMoviedesc(randomMoviedata.description)\r\n\r\n\r\n  }\r\n\r\n  // FUNCTION 2 that runs on guess on click from keyboard\r\n  const onGuess = (e) => {\r\n\r\n    let letter = e.target.value\r\n    // console.log(letter)\r\n    if (movieUnmasked.includes(letter)) {\r\n      setCorrects([...corrects, letter])\r\n      // console.log('word exists')\r\n      movieUnmasked.map((v, i) => {\r\n        if (v === letter) {\r\n          movieTitle[i] = v\r\n\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setFails([...fails, letter])\r\n    }\r\n\r\n  }\r\n\r\n  useEffect((\r\n\r\n\r\n  ) => { }, [corrects])\r\n  return (\r\n    <myContext.Provider value={{ playGame, isButton, setIsButton, gamePopup, hintPopup, setHintPopup, movieTitle, movieDesc, onGuess, corrects, fails }}>\r\n      {props.children}\r\n    </myContext.Provider>\r\n\r\n  )\r\n}\r\n\r\nexport default ContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAOC,KAAK,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,IAAIoB,KAAK;;EAET;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAGxC;EACA,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;IACrBhB,YAAY,CAAC,IAAI,CAAC;IAClBF,WAAW,CAAC,KAAK,CAAC;IAClBmB,SAAS,CAAC,CAAC;EAEb,CAAC;;EAED;EACA,MAAMA,SAAS,GAAGA,CAAA,KAAM;IAEtB,IAAIC,eAAe,GAAG3B,KAAK,CAAC4B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG9B,KAAK,CAAC+B,MAAM,CAAC,CAAC;;IAErE;IACA,IAAIC,SAAS,GAAGL,eAAe,CAACM,KAAK;IACrC,IAAIC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACJ,SAAS,CAACK,WAAW,CAAC,CAAC,CAAC;IAC/CtB,gBAAgB,CAACmB,KAAK,CAAC;IACvB,IAAII,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtC;;IAEApB,KAAK,GAAG,EAAE;IACVgB,KAAK,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAClB;;MAEA,IAAIH,MAAM,CAACI,QAAQ,CAACF,CAAC,CAAC,EAAE;QACtBG,OAAO,CAACC,GAAG,CAACJ,CAAC,EAAE,QAAQ,CAAC;QACxBtB,KAAK,CAACuB,CAAC,CAAC,GAAGD,CAAC;MACd,CAAC,MACI,IAAIA,CAAC,KAAK,GAAG,EAAE;QAClBtB,KAAK,CAACuB,CAAC,CAAC,GAAG,GAAG;MAEhB,CAAC,MACI;QACHvB,KAAK,CAACuB,CAAC,CAAC,GAAG,IAAI;MACjB;IAIF,CAAC,CAAC;IACF5B,aAAa,CAACK,KAAK,CAAC;IACpBD,YAAY,CAACU,eAAe,CAACkB,WAAW,CAAC;EAG3C,CAAC;;EAED;EACA,MAAMC,OAAO,GAAIC,CAAC,IAAK;IAErB,IAAIC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3B;IACA,IAAIpC,aAAa,CAAC4B,QAAQ,CAACM,MAAM,CAAC,EAAE;MAClC5B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE6B,MAAM,CAAC,CAAC;MAClC;MACAlC,aAAa,CAACyB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1B,IAAID,CAAC,KAAKQ,MAAM,EAAE;UAChBpC,UAAU,CAAC6B,CAAC,CAAC,GAAGD,CAAC;QAEnB;MACF,CAAC,CAAC;IACJ,CAAC,MACI;MACHlB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE2B,MAAM,CAAC,CAAC;IAC9B;EAEF,CAAC;EAEDnD,SAAS,CAAC,MAGL,CAAE,CAAC,EAAE,CAACsB,QAAQ,CAAC,CAAC;EACrB,oBACEjB,OAAA,CAACH,SAAS,CAACoD,QAAQ;IAACD,KAAK,EAAE;MAAEzB,QAAQ;MAAEnB,QAAQ;MAAEC,WAAW;MAAEC,SAAS;MAAEE,SAAS;MAAEC,YAAY;MAAEC,UAAU;MAAEI,SAAS;MAAE8B,OAAO;MAAE3B,QAAQ;MAAEE;IAAM,CAAE;IAAA+B,QAAA,EACjJhD,KAAK,CAACgD;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAGzB;AAACnD,EAAA,CAjGQF,eAAe;AAAAsD,EAAA,GAAftD,eAAe;AAmGxB,eAAeA,eAAe;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}