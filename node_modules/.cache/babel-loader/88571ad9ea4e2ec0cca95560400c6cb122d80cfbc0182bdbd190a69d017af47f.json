{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web development\\\\Projects\\\\bolly_hangman\\\\src\\\\Components\\\\Keyboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport './../App.css';\nimport { myContext } from '../Context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Keyboard() {\n  _s();\n  const alphabets = () => {\n    let result = [];\n    let alphabet;\n    for (let i = 65; i < 65 + 26; i++) {\n      alphabet = String.fromCharCode(i);\n      result.push(alphabet);\n    }\n    return result;\n  };\n  const letters = alphabets();\n  // console.log(letters)\n  // calling the alphabet function it returns alphabets that will be stored in letters\n\n  const {\n    onGuess,\n    corrects,\n    fails,\n    movieTitle\n  } = useContext(myContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: letters.map((v, i) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: corrects.includes(v) || fails.includes(),\n          value: v,\n          onClick: e => {\n            onGuess(e);\n          },\n          children: v\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Keyboard, \"s56nUzBN3AwbR8EhDRhsVed2xTQ=\");\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useContext","myContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Keyboard","_s","alphabets","result","alphabet","i","String","fromCharCode","push","letters","onGuess","corrects","fails","movieTitle","children","className","map","v","disabled","includes","value","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Web development/Projects/bolly_hangman/src/Components/Keyboard.jsx"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport './../App.css'\r\nimport { myContext } from '../Context';\r\n\r\n\r\n\r\n\r\nfunction Keyboard() {\r\n\r\n    const alphabets = ()=>{\r\n        let result = [];\r\n        let alphabet;\r\n        for( let i=65; i<(65+26); i++){\r\n            alphabet = String.fromCharCode(i);\r\n            result.push(alphabet)    \r\n        }\r\n        return result\r\n    }\r\n\r\n    const letters = alphabets();\r\n    // console.log(letters)\r\n    // calling the alphabet function it returns alphabets that will be stored in letters\r\n\r\n    const {onGuess,corrects,fails,movieTitle} = useContext(myContext)\r\n\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"keyboard\">\r\n        {letters.map((v,i)=>{\r\n            return(\r\n                <button  className='button' disabled ={corrects.includes(v)||fails.includes()} key={i} value={v} onClick={(e)=>{\r\n                    onGuess(e)\r\n                }} >{v}</button>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Keyboard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,cAAc;AACrB,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAMC,SAAS,GAAGA,CAAA,KAAI;IAClB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,QAAQ;IACZ,KAAK,IAAIC,CAAC,GAAC,EAAE,EAAEA,CAAC,GAAE,EAAE,GAAC,EAAG,EAAEA,CAAC,EAAE,EAAC;MAC1BD,QAAQ,GAAGE,MAAM,CAACC,YAAY,CAACF,CAAC,CAAC;MACjCF,MAAM,CAACK,IAAI,CAACJ,QAAQ,CAAC;IACzB;IACA,OAAOD,MAAM;EACjB,CAAC;EAED,MAAMM,OAAO,GAAGP,SAAS,CAAC,CAAC;EAC3B;EACA;;EAEA,MAAM;IAACQ,OAAO;IAACC,QAAQ;IAACC,KAAK;IAACC;EAAU,CAAC,GAAGnB,UAAU,CAACC,SAAS,CAAC;EAGnE,oBACEE,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACAjB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBL,OAAO,CAACO,GAAG,CAAC,CAACC,CAAC,EAACZ,CAAC,KAAG;QAChB,oBACIR,OAAA;UAASkB,SAAS,EAAC,QAAQ;UAACG,QAAQ,EAAGP,QAAQ,CAACQ,QAAQ,CAACF,CAAC,CAAC,IAAEL,KAAK,CAACO,QAAQ,CAAC,CAAE;UAASC,KAAK,EAAEH,CAAE;UAACI,OAAO,EAAGC,CAAC,IAAG;YAC3GZ,OAAO,CAACY,CAAC,CAAC;UACd,CAAE;UAAAR,QAAA,EAAGG;QAAC,GAF8EZ,CAAC;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtE,CAAC;MAExB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC,gBACJ,CAAC;AAEP;AAACzB,EAAA,CAjCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}